<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${jdbc.initsize}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${jdbc.minidle}"/>
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${jdbc.maxsize}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxwait}"/>
        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>-->
        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>-->
        <!--<property name="validationQuery" value="${druid.validationQuery}"/>-->
        <!--<property name="testWhileIdle" value="${druid.testWhileIdle}"/>-->
        <!--<property name="testOnBorrow" value="${druid.testOnBorrow}"/>-->
        <!--<property name="testOnReturn" value="${druid.testOnReturn}"/>-->

        <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 &ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize"-->
                  <!--value="${druid.maxPoolPreparedStatementPerConnectionSize}"/>-->
        <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
        <!--<property name="filters" value="${druid.filters}"/>-->
    </bean>


    <!--基于JDBC事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--事务-->

    <!--MyBatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.performance.domain"/>
        <property name="mapperLocations" value="classpath:/spring-config/mapper/*.xml"/>
    </bean>


    <!-- 集成Mybatis -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="basePackage" value="com.performance.dao.mapper"/>-->
    <!--</bean>-->



    <!--&lt;!&ndash; ================================事务相关控制================================================= &ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="transactionManager" />-->
    <!--<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;分页插件 &ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="paginationInterceptor" class="com.destiny.user.mvc.interceptor.mybatis.PaginationInterceptor"/>&ndash;&gt;-->

    <!--&lt;!&ndash; sqlSessionFactory &ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>-->
        <!--<property name="typeAliasesPackage" value="com.destiny.user.domain.ext"/>-->
        <!--<property name="mapperLocations">-->
            <!--<list>-->
                <!--<value>classpath:/mapper/*.xml</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash;分页插件 &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="plugins">-->
            <!--<ref bean="paginationInterceptor"/>-->
        <!--</property>&ndash;&gt;-->

    <!--</bean>-->

    <!--&lt;!&ndash; mapperScannerConfigurer &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.destiny.user.dao.impl"/>-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    <!--</bean>-->



</beans>